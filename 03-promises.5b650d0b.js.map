{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,UAEa,CACXC,KAAMC,SAASC,cAAc,SAC7BC,OAAQF,SAASC,cAAc,YAG5BF,KAAKI,iBAAiB,UAE3B,SAA0BC,GACxBA,EAAMC,iBAGN,MACEC,UAAYC,MAAAC,EAAKC,KAAEA,EAAIC,OAAEA,IACvBN,EAAMO,cAEV,IAAIC,EAASC,OAAOL,EAAMM,OAE1B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,OAAOH,EAAOI,OAAQC,GAAK,EAC7CC,EAAcD,EAAGH,GACdK,MAAK,EAACC,SAAEA,EAAQX,MAAEA,MACjBY,YAAW,KACTtB,EAAAuB,OAAOC,QAAQ,uBAAqBH,QAAiBX,MAAW,CAAIe,SAAS,MAC5Ef,MAEJgB,OAAM,EAACL,SAAEA,EAAQX,MAAEA,MAClBY,YAAW,KACTtB,EAAAuB,OAAOI,QAAQ,sBAAoBN,QAAeX,MAAW,CAAIe,SAAS,MACzEf,MAEPK,GAAUC,OAAOJ,EAAKK,OAGxB,SAASE,EAAcE,EAAUX,GAC/B,MAAMkB,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBL,EACFI,EAAQ,C,SAAEX,E,MAAUX,IAEpBuB,EAAO,C,SAAEZ,E,MAAUX","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  button: document.querySelector('button'),\n}\n\nrefs.form.addEventListener('submit', submitBtnHandler);\n\nfunction submitBtnHandler(event) {\n  event.preventDefault();\n\n\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  let result = Number(delay.value);\n  \n  for (let i = 1; i < Number(amount.value); i += 1) {\n    createPromise(i, result)\n      .then(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, { useIcon: false });\n        }, delay);\n      })\n      .catch(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, { useIcon: false });\n        }, delay);\n      });\n    result += Number(step.value);\n  }\n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    return new Promise((resolve, reject) => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    });\n  }\n}"],"names":["$iQIUW","parcelRequire","form","document","querySelector","button","addEventListener","event","preventDefault","elements","delay","delay1","step","amount","currentTarget","result","Number","value","i","createPromise","then","position","setTimeout","Notify","success","useIcon","catch","failure","shouldResolve","Math","random","Promise","resolve","reject"],"version":3,"file":"03-promises.5b650d0b.js.map"}