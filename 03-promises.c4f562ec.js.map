{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAgCA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC1BC,YAAW,WACNN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,YAEpBA,OAvCM,CACXQ,KAAMC,SAASC,cAAc,SAC7BC,OAAQF,SAASC,cAAc,YAG5BF,KAAKI,iBAAiB,UAE3B,SAA0BC,GACxBA,EAAMC,iBAMN,IAJA,IAAIC,EAAQC,OAAOH,EAAMI,cAAcjB,MAAMkB,OACvCC,EAAOH,OAAOH,EAAMI,cAAcE,KAAKD,OACvCE,EAASJ,OAAOH,EAAMI,cAAcG,OAAOF,OAExCG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EAErDvB,EAAcuB,EAAUN,GACrBO,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACfJ,EAAA4B,OAAOC,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,UAGpE2B,OAAM,SAAAJ,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAEZJ,EAAA4B,OAAOI,QAAQ,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,UAIlEe,GAASI,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  button: document.querySelector('button'),\n}\n\nrefs.form.addEventListener('submit', submitBtnHandler);\n\nfunction submitBtnHandler(event) {\n  event.preventDefault();\n\n  let delay = Number(event.currentTarget.delay.value);\n  const step = Number(event.currentTarget.step.value);\n  const amount = Number(event.currentTarget.amount.value);\n\n  for (let position = 0; position <= amount; position += 1)\n  {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        \n  })\n  .catch(({ position, delay }) => {\n  \n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        \n  });\n  }\n  delay += step;\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n     setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","form","document","querySelector","button","addEventListener","event","preventDefault","delay1","Number","currentTarget","value","step","amount","position1","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.c4f562ec.js.map"}